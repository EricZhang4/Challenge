{"ast":null,"code":"var _jsxFileName = \"/Users/may/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked,\n    disabled,\n    onChange\n  } = _ref;\n  const inputId = `RampInputCheckbox-${id}`;\n  const [isChecked, setIsChecked] = useState(checked); //console.log(\"initial state is \" + isChecked);\n  // useEffect(() => {\n  //   setIsChecked(checked);\n  //   console.log(\"UseEffect hook entered state: \" + isChecked);\n  // }, [checked]);\n\n  const handleCheckboxChange = e => {\n    const newChecked = e.target.checked;\n    setIsChecked(newChecked);\n    console.log(\"after onchange method status: \" + isChecked);\n    onChange(newChecked);\n    console.log(\"Handle check box change to status: \" + isChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": isChecked,\n        \"RampInputCheckbox--label-disabled\": disabled\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"checkbox\",\n      className: \"RampInputCheckbox--input\",\n      checked: isChecked,\n      disabled: disabled,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"PhP7ZOkwJBhoZyPv2N65OySr648=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["classNames","useState","InputCheckbox","id","checked","disabled","onChange","inputId","isChecked","setIsChecked","handleCheckboxChange","e","newChecked","target","console","log"],"sources":["/Users/may/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import classNames from \"classnames\"\nimport { useRef } from \"react\"\nimport { InputCheckboxComponent } from \"./types\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\n\nexport const InputCheckbox: InputCheckboxComponent = ({ id, checked, disabled, onChange }) => {\n  const inputId = `RampInputCheckbox-${id}`;\n  \n  const [isChecked, setIsChecked] = useState(checked);\n  \n  //console.log(\"initial state is \" + isChecked);\n\n  // useEffect(() => {\n  //   setIsChecked(checked);\n  //   console.log(\"UseEffect hook entered state: \" + isChecked);\n  // }, [checked]);\n\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    \n    const newChecked = e.target.checked;\n    setIsChecked(newChecked);\n    console.log(\"after onchange method status: \" + isChecked);\n    onChange(newChecked);\n    console.log(\"Handle check box change to status: \" + isChecked);\n  };\n\n  return (\n    <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n      <label\n        htmlFor={inputId}\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": isChecked,\n          \"RampInputCheckbox--label-disabled\": disabled,\n        })}\n      />\n      <input\n        id={inputId}\n        type=\"checkbox\"\n        className=\"RampInputCheckbox--input\"\n        checked={isChecked}\n        disabled={disabled}\n        onChange={handleCheckboxChange}\n      />\n    </div>\n  )\n} "],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAGA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,OAAO,MAAMC,aAAqC,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAAEC,EAAF;IAAMC,OAAN;IAAeC,QAAf;IAAyBC;EAAzB,CAAwC;EAC5F,MAAMC,OAAO,GAAI,qBAAoBJ,EAAG,EAAxC;EAEA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACG,OAAD,CAA1C,CAH4F,CAK5F;EAEA;EACA;EACA;EACA;;EAGA,MAAMM,oBAAoB,GAAIC,CAAD,IAA4C;IAEvE,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAAST,OAA5B;IACAK,YAAY,CAACG,UAAD,CAAZ;IACAE,OAAO,CAACC,GAAR,CAAY,mCAAmCP,SAA/C;IACAF,QAAQ,CAACM,UAAD,CAAR;IACAE,OAAO,CAACC,GAAR,CAAY,wCAAwCP,SAApD;EACD,CAPD;;EASA,oBACE;IAAK,SAAS,EAAC,8BAAf;IAA8C,eAAaD,OAA3D;IAAA,wBACE;MACE,OAAO,EAAEA,OADX;MAEE,SAAS,EAAEP,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCQ,SADY;QAEhD,qCAAqCH;MAFW,CAA7B;IAFvB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,EAAE,EAAEE,OADN;MAEE,IAAI,EAAC,UAFP;MAGE,SAAS,EAAC,0BAHZ;MAIE,OAAO,EAAEC,SAJX;MAKE,QAAQ,EAAEH,QALZ;MAME,QAAQ,EAAEK;IANZ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAzCM;;GAAMR,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}