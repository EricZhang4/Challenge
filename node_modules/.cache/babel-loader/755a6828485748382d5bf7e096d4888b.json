{"ast":null,"code":"var _jsxFileName = \"/Users/may/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked = false,\n    disabled,\n    onChange\n  } = _ref;\n  const inputId = `RampInputCheckbox-${id}`;\n  const [isChecked, setIsChecked] = useState(checked); //console.log(\"initial state is \" + isChecked);\n\n  useEffect(() => {\n    setIsChecked(checked);\n    console.log(\"UseEffect hook entered state: \" + isChecked);\n  }, [checked]);\n\n  const handleCheckboxChange = e => {\n    const newChecked = e.target.checked;\n    setIsChecked(newChecked);\n    onChange(newChecked);\n    console.log(\"Handle check box change to status: \" + isChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": isChecked,\n        \"RampInputCheckbox--label-disabled\": disabled\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"checkbox\",\n      className: \"RampInputCheckbox--input\",\n      checked: isChecked,\n      disabled: disabled,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"shl+4nLSukS+PeKy4ilEAHsC4Ew=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["classNames","useState","useEffect","InputCheckbox","id","checked","disabled","onChange","inputId","isChecked","setIsChecked","console","log","handleCheckboxChange","e","newChecked","target"],"sources":["/Users/may/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import classNames from \"classnames\"\nimport { useRef } from \"react\"\nimport { InputCheckboxComponent } from \"./types\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\n\nexport const InputCheckbox: InputCheckboxComponent = ({ id, checked = false, disabled, onChange }) => {\n  const inputId = `RampInputCheckbox-${id}`;\n  const [isChecked, setIsChecked] = useState(checked);\n  \n  //console.log(\"initial state is \" + isChecked);\n\n  useEffect(() => {\n    setIsChecked(checked);\n    console.log(\"UseEffect hook entered state: \" + isChecked);\n  }, [checked]);\n\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newChecked = e.target.checked;\n    setIsChecked(newChecked);\n    onChange(newChecked);\n    console.log(\"Handle check box change to status: \" + isChecked);\n  };\n\n  return (\n    <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n      <label\n        htmlFor={inputId}\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": isChecked,\n          \"RampInputCheckbox--label-disabled\": disabled,\n        })}\n      />\n      <input\n        id={inputId}\n        type=\"checkbox\"\n        className=\"RampInputCheckbox--input\"\n        checked={isChecked}\n        disabled={disabled}\n        onChange={handleCheckboxChange}\n      />\n    </div>\n  )\n} "],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAGA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,aAAqC,GAAG,QAAiD;EAAA;;EAAA,IAAhD;IAAEC,EAAF;IAAMC,OAAO,GAAG,KAAhB;IAAuBC,QAAvB;IAAiCC;EAAjC,CAAgD;EACpG,MAAMC,OAAO,GAAI,qBAAoBJ,EAAG,EAAxC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACI,OAAD,CAA1C,CAFoG,CAIpG;;EAEAH,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACL,OAAD,CAAZ;IACAM,OAAO,CAACC,GAAR,CAAY,mCAAmCH,SAA/C;EACD,CAHQ,EAGN,CAACJ,OAAD,CAHM,CAAT;;EAMA,MAAMQ,oBAAoB,GAAIC,CAAD,IAA4C;IACvE,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASX,OAA5B;IACAK,YAAY,CAACK,UAAD,CAAZ;IACAR,QAAQ,CAACQ,UAAD,CAAR;IACAJ,OAAO,CAACC,GAAR,CAAY,wCAAwCH,SAApD;EACD,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,8BAAf;IAA8C,eAAaD,OAA3D;IAAA,wBACE;MACE,OAAO,EAAEA,OADX;MAEE,SAAS,EAAER,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCS,SADY;QAEhD,qCAAqCH;MAFW,CAA7B;IAFvB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,EAAE,EAAEE,OADN;MAEE,IAAI,EAAC,UAFP;MAGE,SAAS,EAAC,0BAHZ;MAIE,OAAO,EAAEC,SAJX;MAKE,QAAQ,EAAEH,QALZ;MAME,QAAQ,EAAEO;IANZ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAtCM;;GAAMV,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}